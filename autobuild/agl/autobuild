#!/usr/bin/make -f
# Copyright (C) 2015 - 2018 "IoT.bzh"
# Copyright (C) 2020 Konsulko Group
# Author "Romain Forlot" <romain.forlot@iot.bzh>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#	 http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

THISFILE  := $(lastword $(MAKEFILE_LIST))
ROOT_DIR := $(abspath $(dir $(THISFILE))/../..)

# Build directories
# Note that the debug directory is defined in relation to the release
# directory (BUILD_DIR), this needs to be kept in mind if over-riding
# it and building that widget types, the specific widget type variable
# (e.g. BUILD_DIR_DEBUG) may also need to be specified to yield the
# desired output hierarchy.
BUILD_DIR = $(ROOT_DIR)/build
BUILD_DIR_DEBUG = $(abspath $(BUILD_DIR)/../build-debug)

# Output directory variable for use in pattern rules.
# This is intended for internal use only, hence the explicit override
# definition.
override OUTPUT_DIR = $(BUILD_DIR)

# Final install directory for widgets
DEST = $(OUTPUT_DIR)

# Default build type for release builds
BUILD_TYPE = release

.PHONY: all help update install distclean
.PHONY: clean clean-release clean-debug clean-all
.PHONY: configure configure-release configure-debug
.PHONY: build build-release build-debug build-all
.PHONY: package package-release package-debug package-all

help:
	@echo "List of targets available:"
	@echo ""
	@echo "- all"
	@echo "- help"
	@echo "- clean"
	@echo "- distclean"
	@echo "- configure"
	@echo "- build: compilation, link and prepare files for package into a widget"
	@echo "- package: output a widget file '*.wgt'"
	@echo "- install: install in $(DEST) directory"
	@echo ""
	@echo "Usage: ./autobuild/agl/autobuild package DEST=${HOME}/opt"
	@echo "Don't use your build dir as DEST as wgt file is generated at this location"

all: package-all

# Target specific variable over-rides so static pattern rules can be
# used for the various type-specific targets.

configure-debug build-debug package-debug clean-debug: OUTPUT_DIR = $(BUILD_DIR_DEBUG)
configure-debug build-debug package-debug: BUILD_TYPE = debug

clean-release clean-debug:
	@if [ -d $(OUTPUT_DIR) ]; then \
		$(MAKE) -C $(OUTPUT_DIR) $(CLEAN_ARGS) clean; \
	else \
		echo Nothing to clean; \
	fi

clean: clean-release

clean-all: clean-release clean-debug

distclean: clean-all

configure-release configure-debug:
	@mkdir -p $(OUTPUT_DIR)
	@if [ ! -f $(OUTPUT_DIR)/Makefile ]; then \
		(cd $(OUTPUT_DIR) && qmake CONFIG+=$(BUILD_TYPE) $(CONFIGURE_ARGS) $(ROOT_DIR)); \
	fi

configure: configure-release

build-release build-debug: build-%: configure-%
	@$(MAKE) -C $(OUTPUT_DIR) $(BUILD_ARGS) all

build: build-release

build-all: build-release build-debug

package-release package-debug: package-%: build-%
	@cp $(OUTPUT_DIR)/package/*.wgt $(OUTPUT_DIR)/
	@if [ "$(abspath $(DEST))" != "$(abspath $(OUTPUT_DIR))" ]; then \
		mkdir -p $(DEST) && cp $(OUTPUT_DIR)/*.wgt $(DEST); \
	fi


package: package-release

package-all: package-release package-debug

install: build
	@$(MAKE) -C $(BUILD_DIR) $(INSTALL_ARGS) install
